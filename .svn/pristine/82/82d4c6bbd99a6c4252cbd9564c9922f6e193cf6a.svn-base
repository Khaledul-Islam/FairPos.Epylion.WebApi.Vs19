using FairPos.Epylion.Models.Transfer;
using FairPos.Epylion.Service.Transfer;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace FairPos.Epylion.WebApi.Vs19.Controllers.Transfer
{
    [Route("[controller]/[action]")]
    [Authorize(Policy = nameof(Policy.Account))]
    [ApiController]
    public class StaffToMainWorkerController : ControllerBase
    {
        private readonly IStaffToMainWorkerService _service;

        public StaffToMainWorkerController(IStaffToMainWorkerService service)
        {
            _service = service;
        }

        [HttpGet]
        public IActionResult GetMainWorkerProducts(string SupId, string ShopID)
        {
            if (string.IsNullOrEmpty(SupId))
            {
                return NotFound();
            }
            var response = _service.GetMainWorkerProducts(SupId, ShopID);
            if (response == null)
            {
                return BadRequest();
            }
            return Ok(response);
        }
        [HttpGet]
        public IActionResult GetMainWorkerBarcodeExp(string expbarcode)
        {
            if (string.IsNullOrEmpty(expbarcode))
            {
                return NotFound();
            }
            var response = _service.GetMainWorkerBarcodeExp(expbarcode);
            if (response == null)
            {
                return BadRequest();
            }
            return Ok(response);
        }

        [HttpGet]
        public IActionResult GetMainWorkerNewBarcode(string sBarcode, decimal qty)
        {
            var response = _service.GetMainWorkerNewBarcode(sBarcode, qty);
            if (response == null)
            {
                return BadRequest();
            }
            return Ok(response);
        }
        [HttpPost]
        public IActionResult SaveStockTransfer([FromBody] List<TempStockTransfer> model)
        {
            if (model == null)
            {
                return BadRequest();
            }
            var response = _service.SaveStockTransfer(model);
            if (response == false)
            {
                return NotFound();
            }
            return Ok();
        }
    }
}
