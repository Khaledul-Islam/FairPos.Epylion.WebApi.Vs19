using FairPos.Epylion.Models.Requisition;
using FairPos.Epyllion.Repository.Requisition;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace FairPos.Epylion.Service.Requisition
{
    public interface IAutoRequisitionService
    {
        List<AutoRequistionTemp> GetTempRequistionData(out string errMsg);
        List<AutoRequistionTemp> GetTempRequistionDataByUser(string user, out string errMsg);
        List<AutoRequistion> GetChallanByDateNonReject();
        bool GenerateRequistion(string userID, out string errMsg);
        bool RemoveAllTempRequistion(string userId, out string errMsg);
        bool UpdateActualQty(AutoRequistionTemp model);
        bool AutoRequisitionSave(List<AutoRequistionTemp> olist, out string errMsg);
    }

    public class AutoRequisitionService : IAutoRequisitionService
    {
        private readonly IAutoRequisitionRepository _repo;

        public AutoRequisitionService(IAutoRequisitionRepository repo)
        {
            _repo = repo;
        }

        public bool AutoRequisitionSave(List<AutoRequistionTemp> olist, out string errMsg)
        {
            return _repo.AutoRequisitionSave(olist, out errMsg);
        }

        public bool GenerateRequistion(string userID, out string errMsg)
        {
            return _repo.GenerateRequistion(userID, out errMsg);
        }

        public List<AutoRequistion> GetChallanByDateNonReject()
        {
            return _repo.GetChallanByDateNonReject();
        }

        public List<AutoRequistionTemp> GetTempRequistionData(out string errMsg)
        {
            return _repo.GetTempRequistionData(out errMsg);
        }

        public List<AutoRequistionTemp> GetTempRequistionDataByUser(string user, out string errMsg)
        {
            return _repo.GetTempRequistionDataByUser(user, out errMsg);
        }

        public bool RemoveAllTempRequistion(string userId, out string errMsg)
        {
            return _repo.RemoveAllTempRequistion(userId,out errMsg);
        }

        public bool UpdateActualQty(AutoRequistionTemp model)
        {
            return _repo.UpdateActualQty(model);
        }
    }
}
