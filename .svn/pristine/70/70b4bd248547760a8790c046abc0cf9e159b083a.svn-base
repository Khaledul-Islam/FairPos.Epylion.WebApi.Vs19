using FairPos.Epylion.Models;
using FairPos.Epylion.Models.Operations;
using FairPos.Epylion.Models.Setups;
using FairPos.Epylion.Service.Setups;
using FairPos.Epyllion.Repository.Operations;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace FairPos.Epylion.Service.Operations
{
    public interface ICircularPriceChangedService
    {
        List<CircularPriceChanged> GetPending();
        CircularPriceChangedDetail GetSingleDetails(string id);
        CircularPriceChanged GetSingle(string id);
        bool Update(CircularPriceChangedDetail model);
    }

    public class CircularPriceChangedService : ICircularPriceChangedService
    {
        private readonly ICircularPriceChangedRepositroy _Repo;
        public CircularPriceChangedService(ICircularPriceChangedRepositroy Repo)
        {          
            _Repo = Repo;
        }
    
        public List<CircularPriceChanged> GetPending()
        {
            return _Repo.GetPending();
        }

        public CircularPriceChanged GetSingle(string id)
        {
            return _Repo.GetSingle(id);
        }

        public CircularPriceChangedDetail GetSingleDetails(string id)
        {
            return _Repo.GetSingleDetails(id);
        }

        public bool Update(CircularPriceChangedDetail model)
        {
          
            return _Repo.Update(model);
        }

        //public CircularPriceChangedDetails GetSingle(string id)
        //{
        //    return _Repo.GetSingle(id);
        //}
    }
}
